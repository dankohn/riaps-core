// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: leaderwiththree.capnp

#include "leaderwiththree.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<18> b_aceef000df809d0c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     12, 157, 128, 223,   0, 240, 238, 172,
     22,   0,   0,   0,   1,   0,   0,   0,
    100, 159, 160,  15,   8,  46, 196, 221,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101,  97, 100, 101, 114, 119, 105,
    116, 104, 116, 104, 114, 101, 101,  46,
     99,  97, 112, 110, 112,  58,  77, 101,
    115, 115,  97, 103, 101,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_aceef000df809d0c = b_aceef000df809d0c.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_aceef000df809d0c = {
  0xaceef000df809d0c, b_aceef000df809d0c.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_aceef000df809d0c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace leaderwiththree {
namespace messages {

// MessageType
constexpr uint16_t MessageType::_capnpPrivate::dataWordSize;
constexpr uint16_t MessageType::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MessageType::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MessageType::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

