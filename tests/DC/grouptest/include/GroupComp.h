//
// Auto-generated by edu.vanderbilt.riaps.generator.ComponenetGenerator.xtend
//
#ifndef RIAPS_FW_GROUPCOMP_H
#define RIAPS_FW_GROUPCOMP_H


#include "base/GroupCompBase.h"

constexpr auto GROUP_TYPE_GROUPA = "groupA";
constexpr auto GROUP_TYPE_GROUPB = "groupB";


namespace grouptest {
  namespace components {

    class GroupComp : public GroupCompBase {

    public:
      GroupComp(const py::object *parent_actor,
                const py::dict actor_spec, // Actor json config
                const py::dict type_spec,  // component json config
                const py::list group_spec,
                const std::string &name,
                const std::string &type_name,
                const py::dict args,
                const std::string &application_name,
                const std::string &actor_name);

      virtual void OnClock() override;

      void OnGroupMessage(const riaps::groups::GroupId &groupId,
                          capnp::FlatArrayMessageReader &capnpreader,
                          riaps::ports::PortBase *port);

      virtual ~GroupComp();

    private:
        bool joined_to_a_;
        bool joined_to_b_;

        riaps::groups::GroupId public_group_id_;
        riaps::groups::GroupId unique_group_id_;
    };
  } // namespace components
} // namespace grouptest

std::unique_ptr<grouptest::components::GroupComp>
create_component_py(const py::object *parent_actor,
                    const py::dict actor_spec,
                    const py::dict type_spec,
                    const py::list group_spec,
                    const std::string &name,
                    const std::string &type_name,
                    const py::dict args,
                    const std::string &application_name,
                    const std::string &actor_name);

#endif // RIAPS_FW_GROUPCOMP_H
